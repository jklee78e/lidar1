<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="jetracer">

  <!-- Properties -->
  <xacro:property name="base_height" value="0.25"/>    <!-- 250mm total height -->
  <xacro:property name="base_width" value="0.11"/>     <!-- 110mm total width -->
  <xacro:property name="base_thickness" value="0.002"/> <!-- 2mm thickness -->
  <xacro:property name="wheel_radius" value="0.035"/>  <!-- 70mm diameter -->
  <xacro:property name="wheel_width" value="0.02"/>    <!-- 20mm width -->

  <!-- Camera Properties -->
  <xacro:property name="csi_size" value="0.02"/>       <!-- 20mm -->
  <xacro:property name="d435i_width" value="0.09"/>    <!-- 90mm -->
  <xacro:property name="d435i_height" value="0.025"/>  <!-- 25mm -->
  <xacro:property name="d435i_depth" value="0.025"/>   <!-- 25mm -->
  
  <!-- RPLIDAR Properties -->
  <xacro:property name="lidar_radius" value="0.0365"/> <!-- 73mm diameter -->
  <xacro:property name="lidar_height" value="0.04"/>   <!-- 40mm height -->

  <!-- Base Footprint -->
  <!--
<link name="base_footprint">
  <visual>
    <geometry>
      <box size="0.001 0.001 0.001"/>
    </geometry>
    <material name="transparent">
      <color rgba="0 0 0 0"/>
    </material>
  </visual>
</link>

  <joint name="base_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <origin xyz="0 0 ${wheel_radius}" rpy="0 0 0"/>
        <publish>true</publish>

  </joint>
-->
  <!-- Base Link -->
  <link name="base_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${base_height} ${base_width} ${base_thickness}"/>
      </geometry>
      <material name="green">
        <color rgba="0.0 0.8 0.0 1.0"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${base_height} ${base_width} ${base_thickness}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.5"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>

  <!-- Jetson Nano -->
  <link name="jetson_nano_link">
    <visual>
      <geometry>
        <box size="0.1 0.07 0.02"/>
      </geometry>
      <material name="grey">
        <color rgba="0.7 0.7 0.7 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.1 0.07 0.02"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="${1/12 * 0.1 * (0.07*0.07 + 0.02*0.02)}" ixy="0" ixz="0"
               iyy="${1/12 * 0.1 * (0.1*0.1 + 0.02*0.02)}" iyz="0" 
               izz="${1/12 * 0.1 * (0.1*0.1 + 0.07*0.07)}"/>
    </inertial>
  </link>

  <joint name="jetson_nano_joint" type="fixed">
    <parent link="base_link"/>
    <child link="jetson_nano_link"/>
    <origin xyz="0 0 ${base_thickness + 0.02}" rpy="0 0 0"/>
    <publish>true</publish>
  </joint>

  <!-- CSI Camera -->
  <link name="csi_camera_link">
    <visual>
      <geometry>
        <box size="${csi_size} ${csi_size} ${csi_size}"/>
      </geometry>
      <material name="black">
        <color rgba="0.0 0.0 0.0 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="${csi_size} ${csi_size} ${csi_size}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.0001" iyz="0" izz="0.0001"/>
    </inertial>
  </link>

  <joint name="csi_camera_joint" type="fixed">
    <parent link="base_link"/>
    <child link="csi_camera_link"/>
    <origin xyz="${base_height/2 - 0.02} 0 ${base_thickness + csi_size/2}" rpy="0 0 0"/>
    <publish>true</publish>
  </joint>

  <!-- D435i Camera -->
  <link name="d435i_link">
    <visual>
      <geometry>
        <box size="${d435i_depth} ${d435i_width} ${d435i_height}"/>
      </geometry>
      <material name="blue">
        <color rgba="0.0 0.0 0.8 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="${d435i_depth} ${d435i_width} ${d435i_height}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.0001" iyz="0" izz="0.0001"/>
    </inertial>
  </link>

  <joint name="d435i_joint" type="fixed">
    <parent link="base_link"/>
    <child link="d435i_link"/>
    <origin xyz="${base_height/2 - 0.02} 0 ${base_thickness + d435i_height + 0.02}" rpy="0 0 0"/>
    <publish>true</publish>
  </joint>

  <!-- RPLIDAR -->
  <link name="lidar_link">
    <visual>
      <geometry>
        <cylinder radius="${lidar_radius}" length="${lidar_height}"/>
      </geometry>
      <material name="black">
        <color rgba="0.0 0.0 0.0 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="${lidar_radius}" length="${lidar_height}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.19"/>
      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.0001" iyz="0" izz="0.0001"/>
    </inertial>
  </link>

  <joint name="lidar_joint" type="fixed">
    <parent link="base_link"/>
    <child link="lidar_link"/>
    <origin xyz="0 0 ${base_thickness + lidar_height/2 + 0.05}" rpy="0 0 0"/>
    <publish>true</publish>
  </joint>

  <!-- Wheel Macro -->
  <xacro:macro name="wheel" params="prefix x y">
    <link name="${prefix}_wheel">
      <visual>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="black">
          <color rgba="0.1 0.1 0.1 1.0"/>
        </material>
      </visual>
      <collision>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>
      <inertial>
        <mass value="0.2"/>
        <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
      </inertial>
    <publish>true</publish>
    </link>

    <joint name="${prefix}_wheel_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${prefix}_wheel"/>
      <origin xyz="${x} ${y} 0" rpy="${pi/2} 0 0"/>
      <axis xyz="0 0 1"/>
      <dynamics damping="0.1" friction="0.1"/>
    </joint>

    <!-- Transmission for ROS Control -->
    <transmission name="${prefix}_wheel_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${prefix}_wheel_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
      <actuator name="${prefix}_wheel_motor">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>
  </xacro:macro>

  <!-- Create wheels -->
  <xacro:wheel prefix="front_left" x="${base_height/2-wheel_radius/2}" y="${base_width/2+wheel_radius/2}"/>
  <xacro:wheel prefix="front_right" x="${base_height/2-wheel_radius/2}" y="-${base_width/2+wheel_radius/2}"/>
  <xacro:wheel prefix="rear_left" x="-${base_height/2-wheel_radius/2}" y="${base_width/2+wheel_radius/2}"/>
  <xacro:wheel prefix="rear_right" x="-${base_height/2-wheel_radius/2}" y="-${base_width/2+wheel_radius/2}"/>

  <!-- Gazebo plugins -->
<gazebo>
  <!-- ROS Control -->
  <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
    <robotNamespace>/jetracer</robotNamespace>
    <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
  </plugin>
</gazebo>

<!-- CSI Camera Controller -->
<gazebo reference="csi_camera_link">
  <sensor type="camera" name="csi_camera">
    <update_rate>30.0</update_rate>
    <camera name="csi">
      <horizontal_fov>1.3962634</horizontal_fov>
      <image>
        <width>1280</width>
        <height>720</height>
        <format>R8G8B8</format>
      </image>
      <clip>
        <near>0.02</near>
        <far>300</far>
      </clip>
    </camera>
    <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>30.0</updateRate>
      <cameraName>csi_camera</cameraName>
      <imageTopicName>image_raw</imageTopicName>
      <cameraInfoTopicName>camera_info</cameraInfoTopicName>
      <frameName>csi_camera_link</frameName>
    </plugin>
  </sensor>
</gazebo>

<!-- D435i Camera Controller -->
<gazebo reference="d435i_link">
  <sensor type="depth" name="d435i">
    <update_rate>30.0</update_rate>
    <camera>
      <horizontal_fov>1.5184351</horizontal_fov>
      <image>
        <width>1280</width>
        <height>720</height>
        <format>R8G8B8</format>
      </image>
      <clip>
        <near>0.1</near>
        <far>100</far>
      </clip>
    </camera>
    <plugin name="d435i_controller" filename="libgazebo_ros_openni_kinect.so">
      <baseline>0.1</baseline>
      <alwaysOn>true</alwaysOn>
      <updateRate>30.0</updateRate>
      <cameraName>d435i</cameraName>
      <frameName>d435i_link</frameName>
      <imageTopicName>rgb/image_raw</imageTopicName>
      <depthImageTopicName>depth/image_raw</depthImageTopicName>
      <pointCloudTopicName>depth/points</pointCloudTopicName>
      <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
      <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
    </plugin>
  </sensor>
</gazebo>

<!-- RPLIDAR Controller -->
<gazebo reference="lidar_link">
  <sensor type="ray" name="rplidar">
    <pose>0 0 0 0 0 0</pose>
    <visualize>false</visualize>
    <update_rate>10</update_rate>
    <ray>
      <scan>
        <horizontal>
          <samples>360</samples>
          <resolution>1</resolution>
          <min_angle>-3.14159</min_angle>
          <max_angle>3.14159</max_angle>
        </horizontal>
      </scan>
      <range>
        <min>0.2</min>
        <max>12.0</max>
        <resolution>0.01</resolution>
      </range>
    </ray>
    <plugin name="rplidar_controller" filename="libgazebo_ros_laser.so">
      <topicName>scan</topicName>
      <frameName>lidar_link</frameName>
    </plugin>
  </sensor>
</gazebo>

<!-- Motor Controllers -->
<gazebo>
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
    <robotNamespace>/jetracer</robotNamespace>
    <leftJoint>rear_left_wheel_joint</leftJoint>
    <rightJoint>rear_right_wheel_joint</rightJoint>
    <wheelSeparation>${base_width + wheel_width}</wheelSeparation>
    <wheelDiameter>${2 * wheel_radius}</wheelDiameter>
    <wheelAcceleration>1</wheelAcceleration>
    <wheelTorque>20</wheelTorque>
    <updateRate>50</updateRate>
    <odometrySource>world</odometrySource>
    <publishOdom>true</publishOdom>
    <publishWheelTF>true</publishWheelTF>
    <publishOdomTF>true</publishOdomTF>
    <odometryFrame>odom</odometryFrame>
    <robotBaseFrame>base_link</robotBaseFrame>
  </plugin>
</gazebo>

  <gazebo>
    <plugin name="joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
      <robotNamespace>/jetracer</robotNamespace>
      <jointName>front_left_wheel_joint, front_right_wheel_joint, rear_left_wheel_joint, rear_right_wheel_joint</jointName>
      <updateRate>50.0</updateRate>
    </plugin>
  </gazebo>

</robot>
